(assert (= "function" (typestr +)))

(assert (= 3 (apply + '(1 2))))
(assert (= 3 (apply + '(1 2))))


(assert (= 3 (apply (fn [a b] (+ a b)) '(1 2))))
(assert (= 3 (apply (fn [a b] (+ a b)) '(1 2))))
(assert (= 3 ((fn [a b] (+ a b)) 1 2)))


(assert (= "#\\'" (sexp-str #\')))
(assert (= "#\\(" (sexp-str #\()))
(assert (= "#\\)" (sexp-str #\))))
(assert (= "#\\[" (sexp-str #\[)))
(assert (= "#\\]" (sexp-str #\])))
(assert (= "#\\#" (sexp-str #\#)))
(assert (= "#\\~" (sexp-str #\~)))
(assert (= "#\\`" (sexp-str #\`)))
(assert (= 96 (int #\`)))
(assert (= "#\\{" (sexp-str #\{)))
(assert (= "#\\}" (sexp-str #\})))
(assert (= "#\\\"" (sexp-str #\")))
(assert (= "#," (sexp-str #,)))
(assert (= "#@" (sexp-str #@)))
(assert (= "#," (sexp-str #,)))
(assert (= "#\\;" (sexp-str #\;)))
(assert (= "#!" (sexp-str #!)))
(assert (= "#$" (sexp-str #$)))
(assert (= "#^" (sexp-str #^)))
(assert (= "#&" (sexp-str #&)))
(assert (= "#/" (sexp-str #/)))
(assert (= "#\\\\" (sexp-str #\\)))
(assert (= "#*" (sexp-str #*)))
(assert (= "#+" (sexp-str #+)))
(assert (= "#-" (sexp-str #-)))
(assert (= "#?" (sexp-str #?)))
(assert (= "#<" (sexp-str #<)))
(assert (= "#>" (sexp-str #>)))
(assert (= "#=" (sexp-str #=)))
(assert (= "#:" (sexp-str #:)))
(assert (= "Hi{};" (append "Hi" #\{ #\} #\;)))
(assert (= "#|" (sexp-str #|)))
