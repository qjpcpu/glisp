(assert (= (type 'a) "symbol"))
(assert (= (type "a") "string"))
(assert (= (type [1]) "array"))
(assert (= (type true) "bool"))
(assert (= (type #a) "char"))
(assert (= (type 1.1) "float"))
(assert (= (type (fn [a] ())) "function"))
(assert (= (type (fn [a] ())) "function"))
(assert (= (type {'a 1} ) "hash"))
(assert (= (type 1) "int"))
(assert (= (type '('a)) "list"))
(assert (= (type '()) "list"))
(assert (= (type (time/now)) "time"))
(assert (= (type (make-chan)) "channel"))
(assert (= (type 0B4c6561726e20476f21) "bytes"))
(assert (= (string 0B676c69737020697320636f6f6c) "glisp is cool"))
(assert (= (bytes "glisp is cool") 0B676c69737020697320636f6f6c))
(assert (= 0B676c69737020697320636f6f6c (bytes "glisp is cool") ))
(assert (bytes? 0B6869))
(assert (bool? false))
(assert (= "symbol" (type (symbol 'a))))
(assert (= nil '()))
(assert (nil? nil))

(assert (= "stream" (type (range))))
